{"version":3,"sources":["components/Sidenav/Sidenav.tsx","components/Header/Header.tsx","db/paragraph.ts","pages/GeneralSetting.tsx","utils/date.ts","components/Typing/TypingTextInput.tsx","components/Typing/TypingTextWords.tsx","useHook/useGameStats.tsx","components/Stats/GameStatModal.tsx","components/Typing/Typer.tsx","pages/StartTyping.tsx","components/Stats/BarChart.tsx","components/Stats/Table.tsx","components/Stats/LineChart.tsx","pages/GameStats.tsx","db/chapters.ts","components/Setting/ApplySettings.tsx","pages/CustomTyping.tsx","App.tsx","index.tsx"],"names":["StyledSidenav","styled","div","Sidenav","Nav","className","to","Link","Provider","value","size","color","brandStyle","fontSize","display","gap","alignItems","fontWeight","Header","Navbar","bg","variant","Container","fluid","Brand","href","style","alt","src","width","height","paragraphs","1","2","3","getParagraph","mode","modeProp","toString","index","Math","floor","random","this","length","replace","getWords","trim","split","StyledContent","initialSettings","time","GeneralSetting","history","useHistory","paddingTop","paddingBottom","Form","background","onSubmit","event","preventDefault","form","target","settings","elements","localStorage","setItem","JSON","stringify","push","Group","controlId","Label","Control","as","name","defaultValue","parse","getItem","Button","type","getTimer","m","rem","s","formatS","TypingTextInput","props","setValue","reset","childRef","rest","id","autoFocus","autoComplete","autoCapitalize","autoCorrect","onChange","word","indexOf","ref","padding","handleSetting","onClick","WordSpan","Fragment","counter","text","words","children","TypingTextWords","wordSpacing","letterSpacing","paragraphRef","map","curWord","useGameStats","startTime","paras","timerInterval","isGameOver","useState","accuracy","setAccuracy","total","setTotal","score","setScore","wpmNet","setWpmNet","wpmGross","setWpmGross","useEffect","miliSeconds","Date","getTime","seconds","totalWords","slice","correctWords","filter","w","i","record","localRecords","items","updateGameLocalStorage","clearInterval","current","GameStatModal","show","setShow","open","Modal","onHide","backdrop","keyboard","closeButton","Title","Body","Card","marginTop","Text","Table","striped","bordered","hover","Typer","DISPLAY_COUNT","setCounter","curCounter","setCurCounter","paraIndex","setParaIndex","setWord","setWords","parseInt","typingTime","setTypingTime","curWords","setCurWords","para","setPara","setParas","setSettings","paragraph","join","parseFloat","setIsGameOver","setStartTime","useRef","timer","setTimer","gameInterval","inputRef","setInterval","couter","disabled","onInput","focus","StartTyping","options","scales","yAxes","ticks","beginAtZero","GameChart","console","log","data","labels","item","moment","fromNow","datasets","label","backgroundColor","borderColor","borderWidth","GameStatsTable","minWidth","GameLineChart","GameStats","setItems","setType","nRecords","seNRecords","records","reverse","getGameStatByType","createChapter","title","description","texts","chapters","ApplySettings","chaptersDb","chapter","setChapter","setDuration","duration","find","rows","setOpen","CustomTyping","StyledApp","App","exact","path","component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"+QASMA,EAAgBC,IAAOC,IAAV,8zCAsHJC,EA3CC,WACd,OACE,cAACH,EAAD,UACE,eAACI,EAAA,EAAD,CAAKC,UAAU,4BAAf,UACE,cAAC,gBAAD,CAAeC,GAAG,gBAAlB,SACE,eAACF,EAAA,EAAIG,KAAL,CAAUF,UAAU,WAApB,UACE,cAAC,IAAYG,SAAb,CAAsBC,MAAO,CAAEC,KAAM,QAArC,SACE,cAAC,IAAD,MAEH,qDAIH,cAAC,gBAAD,CAAeJ,GAAG,iBAAlB,SACE,eAACF,EAAA,EAAIG,KAAL,CAAUF,UAAU,WAApB,UACE,cAAC,IAAYG,SAAb,CAAsBC,MAAO,CAAEC,KAAM,OAAQC,MAAO,QAApD,SACE,cAAC,IAAD,MAEF,sDAIJ,cAAC,gBAAD,CAAeL,GAAG,cAAlB,SACE,eAACF,EAAA,EAAIG,KAAL,CAAUF,UAAU,WAApB,UACE,cAAC,IAAYG,SAAb,CAAsBC,MAAO,CAAEC,KAAM,UAArC,SACE,cAAC,IAAD,MAEH,mDAIH,cAAC,gBAAD,CAAeJ,GAAG,YAAlB,SACE,eAACF,EAAA,EAAIG,KAAL,CAAUF,UAAU,WAApB,UACE,cAAC,IAAYG,SAAb,CAAsBC,MAAO,CAAEC,KAAM,QAArC,SACE,cAAC,IAAD,MAEF,uD,kBCpHNE,G,MAAa,CACjBC,SAAU,OACVC,QAAS,OACTC,IAAK,OACLC,WAAY,SACZC,WAAY,MAqBCC,EAlBA,WACb,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,IAAIC,MAAOd,EAA9B,UACE,qBACEe,IAAI,GACJC,IAAI,+CACJC,MAAM,KACNC,OAAO,KACPzB,UAAU,6BACT,IAPL,qBChBF0B,EAAkB,CACtBC,EAAG,CAAC,6nBAGJC,EAAG,CAAC,ktCAGJC,EAAG,CAAC,qvCAGJC,aAAc,SAAUC,GACtB,IAAMC,EAAWD,EAAKE,WAChBC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWC,KAAKN,GAAUO,QACxD,OAAOD,KAAKN,GAAUE,GAAOM,QAAQ,oBAAqB,SAG5DC,SAAU,SAAUV,GAClB,OAAOO,KAAKR,aAAaC,GAAMW,OAAOC,MAAM,S,kBCV1CC,EAAgBhD,IAAOC,IAAV,8GAQNgD,EAAiC,CAC5Cd,KAAM,IACNe,KAAM,KA6EOC,MArEf,WACE,IAAMC,EAAUC,cAehB,OACE,qCACE,cAAC,EAAD,IAEA,eAACL,EAAD,WACE,cAAC,EAAD,IAEA,cAAC3B,EAAA,EAAD,CAAWI,MAAO,CAAE6B,WAAY,OAAQC,cAAe,QAAvD,SACE,eAACC,EAAA,EAAD,CACE/B,MAAO,CAAEgC,WAAY,SACrBrD,UAAU,cACVsD,SAxBW,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAEbC,EAA0B,CAC9B5B,KAAM0B,EAAKG,SAAS,eAAexD,MACnC0C,KAAMW,EAAKG,SAAS,eAAexD,OAGrCyD,aAAaC,QAAQ,WAAYC,KAAKC,UAAUL,IAChDX,EAAQiB,KAAK,kBAWP,UAKE,eAACb,EAAA,EAAKc,MAAN,CAAYlE,UAAU,OAAOmE,UAAU,iBAAvC,UACE,cAACf,EAAA,EAAKgB,MAAN,0BACA,eAAChB,EAAA,EAAKiB,QAAN,CACEC,GAAG,SACHC,KAAK,cACLC,aACET,KAAKU,MAAMZ,aAAaa,QAAQ,aAAe,MAA/C,KAJJ,UAOE,wBAAQtE,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,wBAIJ,eAACgD,EAAA,EAAKc,MAAN,CAAYlE,UAAU,OAAOmE,UAAU,iBAAvC,UACE,cAACf,EAAA,EAAKgB,MAAN,0BACA,eAAChB,EAAA,EAAKiB,QAAN,CACEC,GAAG,SACHC,KAAK,cACLC,aACET,KAAKU,MAAMZ,aAAaa,QAAQ,aAAe,MAA/C,KAJJ,UAOE,wBAAQtE,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,wBAIJ,cAACuE,EAAA,EAAD,CAAQ3D,QAAQ,UAAU4D,KAAK,SAA/B,gC,QCpFNC,EAAW,SAAC/B,GAChB,IAAIgC,EAAGC,EAAKC,EAAGC,EAOf,OALAH,EAAI3C,KAAKC,MAAMU,EAAI,MACnBiC,EAAM5C,KAAKC,MAAMU,EAAI,MAErBmC,GADAD,EAAI7C,KAAKC,MAAM2C,EAAG,MACJ,GAAK,IAAMC,EAAIA,EAEvB,GAAN,OAAUF,EAAV,YAAeG,I,mCCwDFC,EA5DS,SAACC,GAAgB,IAC/BC,EAA6CD,EAA7CC,SAAUC,EAAmCF,EAAnCE,MAAOvC,EAA4BqC,EAA5BrC,KAAMwC,EAAsBH,EAAtBG,SAAaC,EADN,YACeJ,EADf,wCAWtC,OACE,sBAAKnF,UAAU,uCAAf,UACE,qBAAKA,UAAU,MAAf,SACE,mCACE4E,KAAK,OACL5E,UAAU,iCACVwF,GAAG,aACHC,WAAS,EACTC,aAAa,MACbC,eAAe,MACfC,YAAY,MACZvE,MAAO,CAAEb,SAAU,UACnBqF,SArBa,SAACtC,GACpB,IAAMuC,EAAOvC,EAAMG,OAAOtD,MAEtB0F,EAAKC,QAAQ,MAAQ,IACvBX,EAASU,GACTvC,EAAMG,OAAOtD,MAAQ,KAiBjB4F,IAAKV,GACDC,MAIR,qBAAKvF,UAAU,oBAAf,SACE,wBAAQA,UAAU,kBAAkBqB,MAAO,CAAE4E,QAAS,aAAtD,SACGnD,MAIJqC,EAAMe,eACL,qBAAKlG,UAAU,oBAAf,SACE,wBACEA,UAAU,kBACVqB,MAAO,CAAE4E,QAAS,aAClBE,QAAShB,EAAMe,cAHjB,SAKE,cAAC,IAAD,CAAO1F,SAAS,aAKtB,qBAAKR,UAAU,oBAAf,SACE,wBACEA,UAAU,kBACVqB,MAAO,CAAE4E,QAAS,aAClBE,QAAS,kBAAMd,KAHjB,SAKE,cAAC,IAAD,CAAW7E,SAAS,iBCvDxB4F,EAAW,SAACjB,GAYhB,OACE,eAAC,IAAMkB,SAAP,WACE,sBAAMrG,UAZJmF,EAAMjD,QAAUiD,EAAMmB,QACjB,YACEnB,EAAMjD,MAAQiD,EAAMmB,QAChBnB,EAAMoB,KAAKpB,EAAMjD,SACbiD,EAAMqB,MAAMrB,EAAMjD,OACR,eAAiB,cAEvC,GAKL,SAAkCiD,EAAMsB,WAAiB,QAgChDC,EA3BS,SAACvB,GACvB,OACE,mBACEnF,UAAU,2CACVqB,MAAO,CACLb,SAAU,SACVmG,YAAa,UACbC,cAAe,WAEjBZ,IAAKb,EAAM0B,aAPb,SASG1B,EAAMoB,KAAK5D,MAAM,OAAOmE,KAAI,SAAChB,EAAc5D,GAAf,OAC3B,cAAC,EAAD,CAEEA,MAAOA,EACPsE,MAAOrB,EAAMqB,MACbD,KAAMpB,EAAMoB,KAAK5D,MAAM,OACvB2D,QAASnB,EAAMmB,QACfS,QAAS5B,EAAMW,KANjB,SAQGA,GAPI5D,SC0BA8E,MA1Df,SACEC,EACAC,EACAZ,EACAE,EACAW,EACAC,GACC,IAAD,EACgCC,mBAAS,GADzC,mBACOC,EADP,KACiBC,EADjB,OAE0BF,mBAAS,GAFnC,mBAEOG,EAFP,KAEcC,EAFd,OAG0BJ,mBAAS,GAHnC,mBAGOK,EAHP,KAGcC,EAHd,OAI4BN,mBAAS,GAJrC,mBAIOO,EAJP,KAIeC,EAJf,OAKgCR,mBAAS,GALzC,mBAKOS,EALP,KAKiBC,EALjB,KA0CA,OAnCAC,qBAAU,WACR,GAAIf,GAAaG,EAAY,CAC3B,IAAMa,GAAc,IAAIC,MAAOC,UAAYlB,EAAUkB,UAC/CC,EAAUjG,KAAKC,MAAM6F,EAAc,KACnCI,EAAanB,EAAMvE,MAAM,KAAK2F,MAAM,EAAGhC,GACvCiC,EAAeF,EAAWG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,IAAMjC,EAAMkC,MACvDlB,EAAQa,EAAW9F,OACnBmF,EAAQa,EAAahG,OAErBqF,EAASzF,KAAKC,MAAOsF,EAAQU,EAAW,IACxCN,EAAW3F,KAAKC,MAAOoF,EAAQY,EAAW,IAC1Cd,EAAWnF,KAAKC,MAAOsF,EAAQF,EAAS,KAE9CG,EAASD,GACTD,EAASD,GACTK,EAAUD,GACVG,EAAYD,GACZP,EAAYD,IA6BlB,SAAgCqB,GAU9B,IAAIC,EAAe/E,aAAaa,QAAQ,WAExC,GAAIkE,EAAc,CAChB,IAAMC,EAAK,sBAAO9E,KAAKU,MAAMmE,IAAlB,CAAiCD,IAC5C9E,aAAaC,QAAQ,UAAWC,KAAKC,UAAU6E,SAE/ChF,aAAaC,QAAQ,UAAWC,KAAKC,UAAU,CAAC2E,KAhC9CG,CAXe,CACbtD,IAAI,IAAI0C,MAAOC,UACflB,YACAK,WACAI,QACAE,SACAE,WACAN,QACAY,YAIFW,cAAc5B,EAAc6B,YAE7B,CAAC/B,EAAWG,EAAYF,EAAOZ,EAASa,EAAeX,IAEnD,CACLkB,QACAF,QACAI,SACAE,WACAR,a,+BCKW2B,MA1Df,SAAuB9D,GAAa,IAAD,EACTkC,oBAAS,GADA,mBAC1B6B,EAD0B,KACpBC,EADoB,KAEzB7B,EAA6CnC,EAA7CmC,SAAUM,EAAmCzC,EAAnCyC,OAAQE,EAA2B3C,EAA3B2C,SAAUN,EAAiBrC,EAAjBqC,MAAOE,EAAUvC,EAAVuC,MAQ3C,OAJAM,qBAAU,WACRmB,EAAQhE,EAAMiE,QACb,CAACjE,EAAMiE,OAGR,eAACC,EAAA,EAAD,CAAOH,KAAMA,EAAMI,OAPD,kBAAMH,GAAQ,IAOQI,SAAS,SAASC,UAAU,EAApE,UACE,cAACH,EAAA,EAAMxI,OAAP,CAAc4I,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,2BAGF,cAACL,EAAA,EAAMM,KAAP,UACE,qBAAK3J,UAAU,6BAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC4J,EAAA,EAAD,CAAMvI,MAAO,CAAEG,MAAO,iBAAkBqI,UAAW,QAAnD,SACE,eAACD,EAAA,EAAKD,KAAN,WACE,eAACC,EAAA,EAAKF,MAAN,CACE1J,UAAU,cACVqB,MAAO,CAAEb,SAAU,QAFrB,UAIGoH,EAJH,UAMA,cAACgC,EAAA,EAAKE,KAAN,UACE,cAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,SACE,kCACE,+BACE,0CACA,+BAAK5C,EAAL,UAEF,+BACE,4CACA,6BAAKQ,OAEP,+BACE,kDACA,6BAAKN,EAAQE,OAEf,+BACE,kDACA,6BAAKA,6BCqIdyC,I,EAAAA,EAtKf,SAAehF,GAAqB,IAAD,EACTkC,mBAAS,IAA1B+C,EAD0B,sBAEH/C,mBAAS,GAFN,mBAE1Bf,EAF0B,KAEjB+D,EAFiB,OAGGhD,mBAAS,GAHZ,mBAG1BiD,EAH0B,KAGdC,EAHc,OAIClD,mBAAS,GAJV,mBAI1BmD,EAJ0B,KAIfC,EAJe,OAKTpD,mBAAS,IALA,mBAK1BvB,EAL0B,KAKpB4E,EALoB,OAMPrD,mBAAmB,IANZ,mBAM1Bb,EAN0B,KAMnBmE,EANmB,OAOGtD,mBAASuD,SAAS/H,EAAgBC,OAPrC,mBAO1B+H,EAP0B,KAOdC,EAPc,OAQDzD,mBAAmB,IARlB,mBAQ1B0D,EAR0B,KAQhBC,EARgB,OAST3D,mBAAiB,IATR,mBAS1B4D,EAT0B,KASpBC,EAToB,OAUP7D,mBAAiB,IAVV,mBAU1BH,EAV0B,KAUnBiE,EAVmB,OAWD9D,mBAAwBxE,GAXvB,mBAW1Bc,EAX0B,KAWhByH,EAXgB,KAajCpD,qBAAU,WACJ7C,EAAMxB,SACRyH,EAAYjG,EAAMxB,UAElByH,EAAYvI,KAEb,CAACsC,EAAMxB,WAEVqE,qBAAU,WACR,IAAMqD,EAAYlG,EAAMoB,KACxB4E,EAASE,KACR,CAAClG,EAAMoB,KAAM5C,IAEhBqE,qBAAU,WACRkD,EACEhE,EACGvE,MAAM,KACN2F,MAAMkC,EAAWA,EAAYJ,GAC7BkB,KAAK,QAET,CAACpE,EAAOsD,EAAWJ,IAEtBpC,qBAAU,WACR8C,EAA0C,IAA5BS,WAAW5H,EAASb,MAAe,GAAK,MACrD,CAACa,IAEJqE,qBAAU,WACRlF,GAAKkG,QAAU6B,IACd,CAACA,IAzC6B,OA2CGxD,oBAAkB,GA3CrB,qBA2C1BD,GA3C0B,MA2CdoE,GA3Cc,SA4CCnE,mBAAsB,MA5CvB,qBA4C1BJ,GA5C0B,MA4CfwE,GA5Ce,MA6C7B3I,GAAO4I,iBAAOb,GA7Ce,GA8CPxD,mBAASxC,EAASgG,IA9CX,qBA8C1Bc,GA9C0B,MA8CnBC,GA9CmB,MA+C7BzE,GAAgBuE,mBAChBG,GAAeH,mBACbI,GAAWJ,mBACX7E,GAAe6E,mBAlDY,GAoDoB1E,EACnDC,GACAC,EACAZ,EACAE,EACAW,GACAC,IANMM,GApDyB,GAoDzBA,MAAOF,GApDkB,GAoDlBA,MAAOI,GApDW,GAoDXA,OAAQE,GApDG,GAoDHA,SAAUR,GApDP,GAoDOA,SAiFxC,OAxEAU,qBAAU,WACJf,KACF2E,GAAS/G,EAASgG,IAElB9B,cAAc5B,GAAc6B,SAE5B7B,GAAc6B,QAAU+C,aAAY,WAClCjJ,GAAKkG,SAAW,IACZlG,GAAKkG,QAAU,GACjBD,cAAc5B,GAAc6B,SAC5BD,cAAc8C,GAAa7C,SAC3BwC,IAAc,IAEdI,GAAS/G,EAAS/B,GAAKkG,YAExB,QAEJ,CAAC/B,GAAW4D,IAEf7C,qBAAU,WACJlC,IACFuE,GAAW,SAAC2B,GAAD,OAAYA,EAAS,KAChCzB,GAAc,SAACyB,GAAD,OAAYA,EAAS,KACnCrB,GAAS,SAACnE,GAAD,4BAAeA,GAAf,CAAsBV,EAAKpD,YACpCsI,GAAY,SAACxE,GAAD,4BAAeA,GAAf,CAAsBV,EAAKpD,eAExC,CAACoD,IAEJkC,qBAAU,WACJ+C,EAASxI,QAAU0I,EAAKtI,MAAM,KAAKJ,SACrCyI,EAAY,IACZT,EAAc,GACdE,GAAa,SAACvI,GAAD,OAAWA,EAAQkI,QAEjC,CAACW,EAAUE,EAAMb,IAEpBpC,qBAAU,WACR4D,GAAS/G,EAASgG,MACjB,CAACA,IAmCF,eAAC,IAAMxE,SAAP,WACE,cAAC,EAAD,CACEE,KAAM0E,EACN3E,QAASgE,EACTxE,KAAMA,EACNU,MAAOuE,EACPlE,aAAcA,KAGhB,cAAC,EAAD,CACEzB,SAAUsF,EACVuB,SAAU7E,GACV3B,WAAS,EACT3C,KAAM6I,GACNO,QArBe,WACdjF,IACHwE,GAAa,IAAIvD,OAoBf7C,MAhDc,WAClBvC,GAAKkG,QAAU6B,EAEfW,IAAc,GACdd,EAAQ,IACRC,EAAS,IACTK,EAAY,IACZE,EACEhE,EACGvE,MAAM,KACN2F,MAAMkC,EAAWA,EAAYJ,GAC7BkB,KAAK,MAEVjB,EAAW,GACXE,EAAc,GACdkB,GAAa,MACb1C,cAAc8C,GAAa7C,SAE3BD,cAAc5B,GAAc6B,SAExB8C,IAAYA,GAAS9C,UACvB8C,GAAS9C,QAAQ5I,MAAQ,GACzB0L,GAAS9C,QAAQmD,UA2Bf7G,SAAUwG,GACV5F,cAAef,EAAMe,gBAGvB,cAAC,EAAD,CACEkD,KAAMhC,GACNE,SAAUA,GACVM,OAAQA,GACRE,SAAUA,GACVN,MAAOA,GACPE,MAAOA,SCrKT9E,EAAgBhD,IAAOC,IAAV,8GAyCJuM,MAjCf,WAAwB,IAAD,EACK/E,mBAAiB,IADtB,mBACdH,EADc,KACPiE,EADO,OAEW9D,mBAAwBxE,GAFnC,mBAEdc,EAFc,KAEJyH,EAFI,KAkBrB,OAdApD,qBAAU,WACR,IAAMrE,EAAWE,aAAaa,QAAQ,YAEpC0G,EADEzH,EACUI,KAAKU,MAAMd,GAEXd,KAEb,IAEHmF,qBAAU,WACR,IAAMqD,EAAY3J,EAAWI,aAAa6B,EAAS5B,MACnDoJ,EAASE,KACR,CAAC1H,IAGF,qCACE,cAAC,EAAD,IAEA,eAAC,EAAD,WACE,cAAC,EAAD,IAEA,cAAC1C,EAAA,EAAD,CAAWI,MAAO,CAAE6B,WAAY,OAAQC,cAAe,QAAvD,SACE,cAAC,EAAD,CAAOoD,KAAMW,EAAOvD,SAAUA,a,yBCxClC0I,GAAU,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,OA8CRC,GAvCG,SAACvH,GACjBwH,QAAQC,IAAIzH,EAAM0D,OAElB,IAAMgE,EAAO,CACXC,OAAQ3H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeC,IAAOD,EAAK9F,WAAWgG,aAC9DC,SAAU,CACR,CACEC,MAAO,WACPN,KAAM1H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeA,EAAKzF,YAC1C8F,gBAAiB,oBACjBC,YAAa,oBACbC,YAAa,GAEf,CACEH,MAAO,UACPN,KAAM1H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeA,EAAKnF,UAC1CwF,gBAAiB,oBACjBC,YAAa,oBACbC,YAAa,GAEf,CACEH,MAAO,YACPN,KAAM1H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeA,EAAKjF,YAC1CsF,gBAAiB,oBACjBC,YAAa,oBACbC,YAAa,KAKnB,OACE,mCACE,qBAAKtN,UAAU,uBAAf,SACE,cAAC,IAAD,CAAK4E,KAAK,MAAMiI,KAAMA,EAAMR,QAASA,UCT9BkB,I,GAAAA,GAnCf,SAAwBpI,GACtB,OACE,mCACC,qBAAKnF,UAAU,mBAAf,SACG,eAAC+J,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAClK,UAAU,QAAxC,UACA,gCACE,+BACE,mCACA,0CACA,oBAAIqB,MAAO,CAACmM,SAAU,SAAtB,qBACA,oBAAInM,MAAO,CAACmM,SAAU,SAAtB,uBACA,oBAAInM,MAAO,CAACmM,SAAU,SAAtB,mBACA,oBAAInM,MAAO,CAACmM,SAAU,SAAtB,qBACA,oBAAInM,MAAO,CAACmM,SAAU,SAAtB,uBAGJ,gCACGrI,EAAM0D,MAAM/B,KAAI,SAACiG,EAAW7K,GAAZ,OACf,+BACE,6BAAKA,EAAQ,IACb,+BAAK6K,EAAKzF,SAAV,OACA,+BAAKyF,EAAKnF,OAAV,UACA,+BAAKmF,EAAKjF,SAAV,UACA,+BAAKiF,EAAKvF,MAAV,YACA,+BAAKuF,EAAK3E,QAAV,OACA,+BAAK4E,IAAOD,EAAK9F,WAAWgG,UAA5B,SAPO/K,gBCnBfmK,GAAU,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,OA4CRgB,GArCO,SAACtI,GACrB,IAAM0H,EAAO,CACXC,OAAQ3H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeC,IAAOD,EAAK9F,WAAWgG,aAC9DC,SAAU,CACR,CACEC,MAAO,WACPN,KAAM1H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeA,EAAKzF,YAC1C8F,gBAAiB,oBACjBC,YAAa,oBACbC,YAAa,GAEf,CACEH,MAAO,UACPN,KAAM1H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeA,EAAKnF,UAC1CwF,gBAAiB,oBACjBC,YAAa,oBACbC,YAAa,GAEf,CACEH,MAAO,YACPN,KAAM1H,EAAM0D,MAAM/B,KAAI,SAACiG,GAAD,OAAeA,EAAKjF,YAC1CsF,gBAAiB,oBACjBC,YAAa,oBACbC,YAAa,KAKnB,OACE,mCACE,qBAAKtN,UAAU,uBAAf,SACE,cAAC,IAAD,CAAM4E,KAAK,OAAOiI,KAAMA,EAAMR,QAASA,UCrCzCzJ,GAAgBhD,IAAOC,IAAV,iKAuFJ6N,OA3Ef,WAAsB,IAAD,EACOrG,mBAAc,IADrB,mBACZwB,EADY,KACL8E,EADK,OAEKtG,mBAAS,GAFd,mBAEZzC,EAFY,KAENgJ,EAFM,OAGYvG,mBAAS,IAHrB,mBAGZwG,EAHY,KAGFC,EAHE,KA0BnB,OArBA9F,qBAAU,WACR,IAAI+F,EAAelK,aAAaa,QAAQ,WACxCqJ,EAAUA,EAAUhK,KAAKU,MAAMsJ,GAAW,GAC1CJ,EACEI,EACGC,UACAxF,QAAO,SAACuE,GAAD,OAAeA,EAAK3E,QAAU,MACrCE,MAAM,EAAGuF,MAEb,CAACA,IAaF,qCACE,cAAC,EAAD,IAEA,eAAC,GAAD,WACE,cAAC,EAAD,IAEA,eAAC5M,EAAA,EAAD,CAAWI,MAAO,CAAE6B,WAAY,OAAQC,cAAe,QAAvD,UACE,cAACC,EAAA,EAAD,CAAMpD,UAAU,iCAAhB,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAACoD,EAAA,EAAKc,MAAN,CAAYlE,UAAU,OAAOmE,UAAU,iBAAvC,SACE,eAACf,EAAA,EAAKiB,QAAN,CACEC,GAAG,SACHC,KAAK,mBACLsB,SAAU,SAACtC,GAAD,OAAWqK,GAASrK,EAAMG,OAAOtD,QAH7C,UAKE,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,+BAKN,qBAAKJ,UAAU,kBAAf,SACE,cAACoD,EAAA,EAAKc,MAAN,CAAYlE,UAAU,OAAOmE,UAAU,iBAAvC,SACE,eAACf,EAAA,EAAKiB,QAAN,CACEC,GAAG,SACHC,KAAK,mBACLsB,SAAU,SAACtC,GAAD,OAAWuK,GAAYvK,EAAMG,OAAOtD,QAHhD,UAKE,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,MAAd,qCA7CQ,SAACwE,EAAciE,GACvC,OAAa,IAATjE,EACK,cAAC,GAAD,CAAgBiE,MAAOA,IACZ,IAATjE,EACF,cAAC,GAAD,CAAWiE,MAAOA,IAElB,cAAC,GAAD,CAAeA,MAAOA,IA8CxBoF,CAAkBrJ,EAAMiE,aCnF7BqF,GAAgB,SAAC1I,EAAY2I,EAAeC,GAChD,MAAO,CACL5I,KACA2I,QACAC,gBAIEC,GAAQ,CACZ,07BAEA,guCAEA,66BAEA,wwCAEA,g9BAGIC,GAA4B,CAChCJ,GAAc,EAAG,6BAA8BG,GAAM,IACrDH,GAAc,EAAG,6BAA8BG,GAAM,IACrDH,GAAc,EAAG,uBAAwBG,GAAM,IAC/CH,GAAc,EAAG,2BAA4BG,GAAM,IACnDH,GAAc,EAAG,sBAAuBG,GAAM,KAGhD1B,QAAQC,IAAI,CAAE0B,cCoCCC,I,GAAAA,GAlEf,SAAuBpJ,GAAa,IAAD,EACdkC,mBAASmH,IAArBF,EAD0B,sBAEHjH,mBAASiH,EAAS,IAFf,mBAE1BG,EAF0B,KAEjBC,EAFiB,KAQjC,OAJA1G,qBAAU,WACR7C,EAAMgG,SAASsD,EAAQL,eACtB,CAACK,EAAStJ,IAGX,eAAC/B,EAAA,EAAD,CAAMpD,UAAU,4BAA4BqB,MAAO,CAAEb,SAAU,QAA/D,UACE,eAAC4C,EAAA,EAAKc,MAAN,CAAYC,UAAU,6BAAtB,UACE,cAACf,EAAA,EAAKgB,MAAN,uBACA,eAAChB,EAAA,EAAKiB,QAAN,CACEC,GAAG,SACHuB,SAAU,SAACtC,GAAD,OAAgB4B,EAAMwJ,aAAapL,EAAMG,OAAOtD,QAC1DoE,aAAcW,EAAMyJ,SAHtB,UAKE,wBAAQxO,MAAM,IAAd,mBACA,wBAAQA,MAAM,IAAd,mBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,MAAd,mBACA,wBAAQA,MAAM,MAAd,mBACA,wBAAQA,MAAM,MAAd,oBACA,wBAAQA,MAAM,MAAd,0BAIJ,eAACgD,EAAA,EAAKc,MAAN,CAAYC,UAAU,6BAAtB,UACE,cAACf,EAAA,EAAKgB,MAAN,qCACA,cAAChB,EAAA,EAAKiB,QAAN,CACEC,GAAG,SACHuB,SAAU,SAACtC,GAAD,OACRmL,EACEJ,EAASO,MAAK,SAACJ,GAAD,OAAaA,EAAQjJ,MAAQjC,EAAMG,OAAOtD,UACtDkO,EAAS,KAGf9J,aAAc,EARhB,SAUG8J,GACCA,EAAS/L,OAAS,GAClB+L,EAASxH,KAAI,SAAC2H,EAASvM,GAAV,OACX,wBAAQ9B,MAAOqO,EAAQjJ,GAAvB,SAA4BiJ,EAAQN,gBAK5C,eAAC/K,EAAA,EAAKc,MAAN,CAAYC,UAAU,+BAAtB,UACE,cAACf,EAAA,EAAKgB,MAAN,+BACA,cAAChB,EAAA,EAAKiB,QAAN,CACEC,GAAG,WACHwK,KAAM,EACN1O,MAAOqO,EAAQL,YACfvI,SAAU,SAACtC,GAAD,OAAgB4B,EAAMgG,SAAS5H,EAAMG,OAAOtD,QACtDiB,MAAO,CAAEb,SAAU,eAIvB,cAACmE,EAAA,EAAD,CAAQ3D,QAAQ,UAAUmF,QAAS,kBAAMhB,EAAM4J,SAAQ,IAAvD,gCCxDAnM,GAAgBhD,IAAOC,IAAV,gHAkDJmP,I,GAAAA,GA1Cf,WAAyB,IAAD,EACE3H,oBAAS,GADX,mBACf+B,EADe,KACT2F,EADS,OAEU1H,mBAAS,IAFnB,mBAEfuH,EAFe,KAELD,EAFK,OAGItH,mBACxB,+CAJoB,mBAGfH,EAHe,KAGRiE,EAHQ,KAatB,OAFAwB,QAAQC,IAAI,CAAEgC,WAAU1H,UAGtB,qCACE,cAAC,EAAD,IAEA,eAAC,GAAD,WACE,cAAC,EAAD,IAEA,eAACjG,EAAA,EAAD,CAAWI,MAAO,CAAE6B,WAAY,OAAQC,cAAe,QAAvD,UACE,cAAC,EAAD,CACEoD,KAAMW,EAAM1E,QAAQ,oBAAqB,QACzCmB,SAAU,CAAEb,KAAK,GAAD,OAAK8L,EAAW,IAAM7M,KAAM,KAC5CmE,cAjBY,WACpB6I,GAAQ,SAAC3F,GAAD,OAAWA,QAmBZA,GACC,cAAC,GAAD,CACE2F,QAASA,EACTH,SAAUA,EACVD,YAAaA,EACbzH,MAAOA,EACPiE,SAAUA,c,OC1BxB,IAAM8D,GAAYrP,IAAOC,IAAV,2FAKAqP,GAnBf,WACE,OACE,cAACD,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,gBAAgBC,UAAWjD,IAC7C,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,iBAAiBC,UAAWL,KAC9C,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,cAAcC,UAAW3B,KAC3C,cAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,YAAYC,UAAWtM,UCZjDuM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,gBAAD,CAAQC,SAAS,cAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.12e20e67.chunk.js","sourcesContent":["import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { FiPlay, FiSettings } from \"react-icons/fi\";\nimport { BsGraphUp } from \"react-icons/bs\";\nimport styled from \"styled-components\";\nimport { IconContext } from \"react-icons/lib\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { FaUserCog } from \"react-icons/fa\";\n\nconst StyledSidenav = styled.div`\n  height: 100%;\n  width: 150px;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  background-color: #32373c;\n  overflow-x: hidden;\n  padding-top: 20px;\n\n  .nav-container {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    .nav-item {\n      width: 100%;\n      color: white;\n      flex: 1;\n      flex-direction: column;\n      height: 100%;\n      max-height: 120px;\n      gap: 15px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n        background-color: rgba(0, 0, 0, 0.15);\n      }\n\n      &.active,\n      &.active:hover {\n        color: #fff;\n        text-decoration: none;\n        background-color: #007bff;\n      }\n    }\n  }\n\n  @media (max-width: 768px) {\n    height: auto;\n    width: 100%;\n    bottom: 0;\n    left: 0;\n    top: unset;\n    padding-top: 0;\n\n    .nav-container {\n      width: 100%;\n      height: auto;\n      flex-direction: row!important;\n\n      .nav-item {\n        padding: 15px 0;\n        \n        & > span {\n          display: none;\n        }\n\n        & > svg {\n          height: 22px;\n          width: 22px;\n        }\n      }\n    }\n  }\n`;\n\nconst Sidenav = () => {\n  return (\n    <StyledSidenav>\n      <Nav className=\"nav-container flex-column\">\n        <LinkContainer to=\"/start-typing\">\n          <Nav.Link className=\"nav-item\">\n            <IconContext.Provider value={{ size: \"2rem\" }}>\n              <FiPlay />\n            </IconContext.Provider>\n           <span>Start Typing</span>\n          </Nav.Link>\n        </LinkContainer>\n\n        <LinkContainer to=\"/custom-typing\">\n          <Nav.Link className=\"nav-item\">\n            <IconContext.Provider value={{ size: \"2rem\", color: \"#fff\" }}>\n              <FaUserCog />\n            </IconContext.Provider>\n            <span>Custom Typing</span>\n          </Nav.Link>\n        </LinkContainer>\n\n        <LinkContainer to=\"/game-stats\">\n          <Nav.Link className=\"nav-item\">\n            <IconContext.Provider value={{ size: \"1.8rem\" }}>\n              <BsGraphUp />\n            </IconContext.Provider>\n           <span>Game Stats</span> \n          </Nav.Link>\n        </LinkContainer>\n\n        <LinkContainer to=\"/settings\">\n          <Nav.Link className=\"nav-item\">\n            <IconContext.Provider value={{ size: \"2rem\" }}>\n              <FiSettings />\n            </IconContext.Provider>\n            <span>Settings</span>\n          </Nav.Link>\n        </LinkContainer>\n      </Nav>\n    </StyledSidenav>\n  );\n};\nexport default Sidenav;\n","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst brandStyle = {\n  fontSize: \"28px\",\n  display: \"flex\",\n  gap: \"10px\",\n  alignItems: \"center\",\n  fontWeight: 600,\n};\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Container fluid>\n        <Navbar.Brand href=\"/\" style={brandStyle}>\n          <img\n            alt=\"\"\n            src=\"https://react-bootstrap.netlify.app/logo.svg\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />{\" \"}\n          WordBeater\n        </Navbar.Brand>\n      </Container>\n    </Navbar>\n  );\n};\nexport default Header;\n","const paragraphs: any = {\n  1: [\n    `this now time set there see was none left right well I we their time sun soon once rock food dark light jump ride car sea dog box bed game table fridge calender class books shoes dress fan chair mother father brother sister sea life  good hog day far wind fish run hope thanks window outdoors tree house school pants shirt brush hat boots pictures phone facebook ring block beach water horse eyes text new fast door add for I'm out of random words to think of this is a simple paragraph made by alexis danyel martin hope you enjoy typing this I guess that's all cause I'm out of ideas I hope you have a very good day or night goodbye`,\n  ],\n  2: [\n    `Days are not of equal value in one's life. Some bring happiness while others bring sadness. Sadness and happiness both are equally important to man's life, since they are the two sides of a coin. As we cannot forget the happiest day, we are unable to forget the saddest day of our life too. The saddest day of my life was the Diwali Day. Diwali is considered to be a happy festival and till last Diwali, it was my favorite festival. On last Diwali, my sister, my brother and I were busy lighting the fireworks. I was holding a ‘fuljhari' in my hand and unfortunately my younger brother, who was standing just beside me, had a cracker in his hand. This cracker caught fire and a very loud explosion was heard which shook my sister and me. After that, we all could think of nothing else than blood stained cotton, bandage, dettol etc. My cousin took my brother to the doctor where he got 14 stitches in his forefinger and thumb. But at home, everybody kept cursing and blaming me for the mishap. That night, I could not sleep and I cried a lot. For next few days, I bore the burden of this blame for being responsible for this unfortunate incident. I felt deeply guilty conscious which I was able to overcome after a long time.`,\n  ],\n  3: [\n    `Recently, an exhibition ‘Building A New India' was held in the capital. It was organized by the Ministry of Information and Broadcasting, Government of India. The exhibition was set up in the Triveni Kala Sangam. The chief exhibits were photographs, novels, some sculptures by Indian modern artists presenting Indian cultural inheritance. First of all, I visited the general section of the exhibition where different charts and photographs depicting India's development in various fields were set. Most impressive photographs among these were those showing India's nuclear development. The second section dealt with India's magnificent historical background. I was fascinated by the pictures of Mohanjodaro excavation. Then I saw the most beautiful and colorful section of the exhibition i.e. the cultural section. It consisted of paintings, sculptures, photographs etc. The Rajasthani and Gujarati paintings were very colourful and attractive. This exhibition, inaugurated by the Prime Minister, lasted for a week. It proved to be of great educational value. It brushed up my knowledge about India as my motherland. It enhanced my respect for my great country, India. I would very much appreciate if the Indian government organized some more such exhibitions.`,\n  ],\n  getParagraph: function (mode: number): string {\n    const modeProp = mode.toString();\n    const index = Math.floor(Math.random() * this[modeProp].length);\n    return this[modeProp][index].replace(/(\\r\\n|\\r|\\n){2,}/g, \"$1\\n\");\n  },\n\n  getWords: function (mode: number) {\n    return this.getParagraph(mode).trim().split(/\\s+/);\n  },\n};\n\nexport { paragraphs };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header/Header\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport Sidenav from \"../components/Sidenav/Sidenav\";\n\nconst StyledContent = styled.div`\n  margin-left: 150px;\n\n  @media (max-width: 768px) {\n    margin-left: 0;\n  }\n`;\n\nexport const initialSettings: SettingsTypeI = {\n  mode: \"1\",\n  time: \"1\",\n};\n\nexport interface SettingsTypeI {\n  mode: string;\n  time: string;\n}\n\nfunction GeneralSetting() {\n  const history = useHistory();\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    const form = event.target;\n\n    const settings: SettingsTypeI = {\n      mode: form.elements[\"select-mode\"].value,\n      time: form.elements[\"select-time\"].value,\n    };\n\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\n    history.push(\"/start-typing\");\n  };\n\n  return (\n    <>\n      <Sidenav />\n\n      <StyledContent>\n        <Header />\n\n        <Container style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}>\n          <Form\n            style={{ background: \"white\" }}\n            className=\"p-4 rounded\"\n            onSubmit={handleSubmit}\n          >\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Select Mode</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"select-mode\"\n                defaultValue={\n                  JSON.parse(localStorage.getItem(\"settings\") || \"[]\")[\"mode\"]\n                }\n              >\n                <option value=\"1\">Easy</option>\n                <option value=\"2\">Normal</option>\n                <option value=\"3\">Hard</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Select Time</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"select-time\"\n                defaultValue={\n                  JSON.parse(localStorage.getItem(\"settings\") || \"[]\")[\"time\"]\n                }\n              >\n                <option value=\"1\">Short</option>\n                <option value=\"2\">Normal</option>\n                <option value=\"3\">Long</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Container>\n      </StyledContent>\n    </>\n  );\n}\n\nexport default GeneralSetting;\n","const getTimer = (time: number) => {\n  let m, rem, s, formatS;\n\n  m = Math.floor(time / (1000 * 60 * 60));\n  rem = Math.floor(time % (1000 * 60 * 60));\n  s = Math.floor(rem / (1000 * 60));\n  formatS = s < 10 ? \"0\" + s : s;\n\n  return `${m}:${formatS}`;\n};\n\nexport { getTimer };\n","import React from \"react\";\nimport { MdRefresh } from \"react-icons/md\";\nimport { BiCog } from \"react-icons/bi\";\n\nconst TypingTextInput = (props: any) => {\n  const { setValue, reset, time, childRef, ...rest } = props;\n  const handleChange = (event: any) => {\n    const word = event.target.value;\n\n    if (word.indexOf(\" \") > -1) {\n      setValue(word);\n      event.target.value = \"\";\n    }\n  };\n\n  return (\n    <div className=\"row no-gutters justify-space-between\">\n      <div className=\"col\">\n        <input\n          type=\"text\"\n          className=\"form-control rounded-left py-1\"\n          id=\"word-input\"\n          autoFocus\n          autoComplete=\"off\"\n          autoCapitalize=\"off\"\n          autoCorrect=\"off\"\n          style={{ fontSize: \"1.5rem\" }}\n          onChange={handleChange}\n          ref={childRef}\n          {...rest}\n        />\n      </div>\n\n      <div className=\"col col-auto pl-3\">\n        <button className=\"btn btn-primary\" style={{ padding: \"12px 14px\" }}>\n          {time}\n        </button>\n      </div>\n\n      {props.handleSetting && (\n        <div className=\"col col-auto pl-3\">\n          <button\n            className=\"btn btn-primary\"\n            style={{ padding: \"12px 14px\" }}\n            onClick={props.handleSetting}\n          >\n            <BiCog fontSize=\"22px\" />\n          </button>\n        </div>\n      )}\n\n      <div className=\"col col-auto pl-3\">\n        <button\n          className=\"btn btn-primary\"\n          style={{ padding: \"12px 14px\" }}\n          onClick={() => reset()}\n        >\n          <MdRefresh fontSize=\"22px\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TypingTextInput;\n","import React from \"react\";\n\nconst WordSpan = (props: any) => {\n  const getClassName = () => {\n    if (props.index === props.counter) {\n      return \"highlight\";\n    } else if (props.index < props.counter) {\n      const word = props.text[props.index];\n      const userWord = props.words[props.index];\n      return word === userWord ? \"text-success\" : \"text-danger\";\n    }\n    return \"\";\n  };\n\n  return (\n    <React.Fragment>\n      <span className={getClassName()}>{props.children}</span>{\" \"}\n    </React.Fragment>\n  );\n};\n\nconst TypingTextWords = (props: any) => {\n  return (\n    <p\n      className=\"lead p-3 bg-white text-secondary rounded\"\n      style={{\n        fontSize: \"1.5rem\",\n        wordSpacing: \"0.04rem\",\n        letterSpacing: \"0.02rem\",\n      }}\n      ref={props.paragraphRef}\n    >\n      {props.text.split(/\\s+/).map((word: string, index: number) => (\n        <WordSpan\n          key={index}\n          index={index}\n          words={props.words}\n          text={props.text.split(/\\s+/)}\n          counter={props.counter}\n          curWord={props.word}\n        >\n          {word}\n        </WordSpan>\n      ))}\n    </p>\n  );\n};\n\nexport default TypingTextWords;\n","import { useState, useEffect } from \"react\";\n\nfunction useGameStats(\n  startTime: Date | null,\n  paras: string,\n  counter: number,\n  words: string[],\n  timerInterval: React.MutableRefObject<any>,\n  isGameOver: boolean\n) {\n  const [accuracy, setAccuracy] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [score, setScore] = useState(0);\n  const [wpmNet, setWpmNet] = useState(0);\n  const [wpmGross, setWpmGross] = useState(0);\n\n  useEffect(() => {\n    if (startTime && isGameOver) {\n      const miliSeconds = new Date().getTime() - startTime.getTime();\n      const seconds = Math.floor(miliSeconds / 1000);\n      const totalWords = paras.split(\" \").slice(0, counter);\n      const correctWords = totalWords.filter((w, i) => w === words[i]);\n      const total = totalWords.length;\n      const score = correctWords.length;\n\n      const wpmNet = Math.floor((score / seconds) * 60);\n      const wpmGross = Math.floor((total / seconds) * 60);\n      const accuracy = Math.floor((score / total) * 100);\n\n      setScore(score);\n      setTotal(total);\n      setWpmNet(wpmNet);\n      setWpmGross(wpmGross);\n      setAccuracy(accuracy);\n\n      const record = {\n        id: new Date().getTime(),\n        startTime,\n        accuracy,\n        score,\n        wpmNet,\n        wpmGross,\n        total,\n        seconds,\n      };\n\n      updateGameLocalStorage(record);\n      clearInterval(timerInterval.current);\n    }\n  }, [startTime, isGameOver, paras, counter, timerInterval, words]);\n\n  return {\n    score,\n    total,\n    wpmNet,\n    wpmGross,\n    accuracy,\n  };\n}\n\nexport default useGameStats;\n\nfunction updateGameLocalStorage(record: {\n  id: number;\n  startTime: Date;\n  accuracy: number;\n  score: number;\n  wpmNet: number;\n  wpmGross: number;\n  total: number;\n  seconds: number;\n}) {\n  let localRecords = localStorage.getItem(\"records\");\n\n  if (localRecords) {\n    const items = [...JSON.parse(localRecords), record];\n    localStorage.setItem(\"records\", JSON.stringify(items));\n  } else {\n    localStorage.setItem(\"records\", JSON.stringify([record]));\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { Card, Modal, Table } from \"react-bootstrap\";\n\nfunction GameStatModal(props: any) {\n  const [show, setShow] = useState(false);\n  const { accuracy, wpmNet, wpmGross, total, score } = props;\n\n  const handleClose = () => setShow(false);\n\n  useEffect(() => {\n    setShow(props.open);\n  }, [props.open]);\n\n  return (\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>Game Stats</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <div className=\"row justify-content-center\">\n          <div className=\"col\">\n            <Card style={{ width: \"100%!important\", marginTop: \"16px\" }}>\n              <Card.Body>\n                <Card.Title\n                  className=\"text-center\"\n                  style={{ fontSize: \"2rem\" }}\n                >\n                  {wpmNet} WPM\n                </Card.Title>\n                <Card.Text>\n                  <Table striped bordered hover>\n                    <tbody>\n                      <tr>\n                        <td>Accuracy</td>\n                        <td>{accuracy}%</td>\n                      </tr>\n                      <tr>\n                        <td>Gross WPM </td>\n                        <td>{wpmGross}</td>\n                      </tr>\n                      <tr>\n                        <td>Incorrect Words </td>\n                        <td>{total - score}</td>\n                      </tr>\n                      <tr>\n                        <td>Highest Net WPM </td>\n                        <td>{score}</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default GameStatModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { getTimer } from \"../../utils/date\";\nimport { initialSettings, SettingsTypeI } from \"../../pages/GeneralSetting\";\nimport TypingTextInput from \"./TypingTextInput\";\nimport TypingTextWords from \"./TypingTextWords\";\nimport useGameStats from \"../../useHook/useGameStats\";\nimport GameStatModal from \"../Stats/GameStatModal\";\n\ninterface TyperPropsI {\n  text: string;\n  settings: SettingsTypeI;\n  handleSetting?: any;\n}\n\nfunction Typer(props: TyperPropsI) {\n  const [DISPLAY_COUNT] = useState(32);\n  const [counter, setCounter] = useState(0);\n  const [curCounter, setCurCounter] = useState(0);\n  const [paraIndex, setParaIndex] = useState(0);\n  const [word, setWord] = useState(\"\");\n  const [words, setWords] = useState<string[]>([]);\n  const [typingTime, setTypingTime] = useState(parseInt(initialSettings.time));\n  const [curWords, setCurWords] = useState<string[]>([]);\n  const [para, setPara] = useState<string>(\"\");\n  const [paras, setParas] = useState<string>(\"\");\n  const [settings, setSettings] = useState<SettingsTypeI>(initialSettings);\n\n  useEffect(() => {\n    if (props.settings) {\n      setSettings(props.settings);\n    } else {\n      setSettings(initialSettings);\n    }\n  }, [props.settings]);\n\n  useEffect(() => {\n    const paragraph = props.text;\n    setParas(paragraph);\n  }, [props.text, settings]);\n\n  useEffect(() => {\n    setPara(\n      paras\n        .split(\" \")\n        .slice(paraIndex, paraIndex + DISPLAY_COUNT)\n        .join(\" \")\n    );\n  }, [paras, paraIndex, DISPLAY_COUNT]);\n\n  useEffect(() => {\n    setTypingTime(parseFloat(settings.time) * 1000 * 60 * 15);\n  }, [settings]);\n\n  useEffect(() => {\n    time.current = typingTime;\n  }, [typingTime]);\n\n  const [isGameOver, setIsGameOver] = useState<boolean>(false);\n  const [startTime, setStartTime] = useState<Date | null>(null);\n  let time = useRef(typingTime);\n  const [timer, setTimer] = useState(getTimer(typingTime));\n  let timerInterval = useRef<any>();\n  let gameInterval = useRef<any>();\n  const inputRef = useRef<any>();\n  const paragraphRef = useRef<any>();\n\n  const { score, total, wpmNet, wpmGross, accuracy } = useGameStats(\n    startTime,\n    paras,\n    counter,\n    words,\n    timerInterval,\n    isGameOver\n  );\n\n  useEffect(() => {\n    if (startTime) {\n      setTimer(getTimer(typingTime));\n\n      clearInterval(timerInterval.current);\n\n      timerInterval.current = setInterval(() => {\n        time.current -= 1000 * 60;\n        if (time.current < 0) {\n          clearInterval(timerInterval.current);\n          clearInterval(gameInterval.current);\n          setIsGameOver(true);\n        } else {\n          setTimer(getTimer(time.current));\n        }\n      }, 1000);\n    }\n  }, [startTime, typingTime]);\n\n  useEffect(() => {\n    if (word) {\n      setCounter((couter) => couter + 1);\n      setCurCounter((couter) => couter + 1);\n      setWords((words) => [...words, word.trim()]);\n      setCurWords((words) => [...words, word.trim()]);\n    }\n  }, [word]);\n\n  useEffect(() => {\n    if (curWords.length >= para.split(\" \").length) {\n      setCurWords([]);\n      setCurCounter(0);\n      setParaIndex((index) => index + DISPLAY_COUNT);\n    }\n  }, [curWords, para, DISPLAY_COUNT]);\n\n  useEffect(() => {\n    setTimer(getTimer(typingTime));\n  }, [typingTime]);\n\n  const handleReset = () => {\n    time.current = typingTime;\n\n    setIsGameOver(false);\n    setWord(\"\");\n    setWords([]);\n    setCurWords([]);\n    setPara(\n      paras\n        .split(\" \")\n        .slice(paraIndex, paraIndex + DISPLAY_COUNT)\n        .join(\" \")\n    );\n    setCounter(0);\n    setCurCounter(0);\n    setStartTime(null);\n    clearInterval(gameInterval.current);\n\n    clearInterval(timerInterval.current);\n\n    if (inputRef && inputRef.current) {\n      inputRef.current.value = \"\";\n      inputRef.current.focus();\n    }\n  };\n\n  const handleChange = () => {\n    if (!startTime) {\n      setStartTime(new Date());\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TypingTextWords\n        text={para}\n        counter={curCounter}\n        word={word}\n        words={curWords}\n        paragraphRef={paragraphRef}\n      />\n\n      <TypingTextInput\n        setValue={setWord}\n        disabled={isGameOver}\n        autoFocus\n        time={timer}\n        onInput={handleChange}\n        reset={handleReset}\n        childRef={inputRef}\n        handleSetting={props.handleSetting}\n      />\n\n      <GameStatModal\n        open={isGameOver}\n        accuracy={accuracy}\n        wpmNet={wpmNet}\n        wpmGross={wpmGross}\n        total={total}\n        score={score}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default Typer;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Sidenav from \"./../components/Sidenav/Sidenav\";\nimport Header from \"./../components/Header/Header\";\nimport { Container } from \"react-bootstrap\";\nimport { paragraphs } from \"./../db/paragraph\";\nimport { initialSettings, SettingsTypeI } from \"./GeneralSetting\";\nimport Typer from \"../components/Typing/Typer\";\n\nconst StyledContent = styled.div`\n  margin-left: 150px;\n\n  @media (max-width: 768px) {\n    margin-left: 0;\n  }\n`;\n\nfunction StartTyping() {\n  const [paras, setParas] = useState<string>(\"\");\n  const [settings, setSettings] = useState<SettingsTypeI>(initialSettings);\n\n  useEffect(() => {\n    const settings = localStorage.getItem(\"settings\");\n    if (settings) {\n      setSettings(JSON.parse(settings!));\n    } else {\n      setSettings(initialSettings);\n    }\n  }, []);\n\n  useEffect(() => {\n    const paragraph = paragraphs.getParagraph(settings.mode);\n    setParas(paragraph);\n  }, [settings]);\n\n  return (\n    <>\n      <Sidenav />\n\n      <StyledContent>\n        <Header />\n\n        <Container style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}>\n          <Typer text={paras} settings={settings} />\n        </Container>\n      </StyledContent>\n    </>\n  );\n}\n\nexport default StartTyping;\n","import { Bar } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst GameChart = (props: any) => {\n  console.log(props.items);\n\n  const data = {\n    labels: props.items.map((item: any) => moment(item.startTime).fromNow()),\n    datasets: [\n      {\n        label: \"Accuracy\",\n        data: props.items.map((item: any) => item.accuracy),\n        backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: \"WPM Net\",\n        data: props.items.map((item: any) => item.wpmNet),\n        backgroundColor: \"rgb(54, 162, 235)\",\n        borderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n      {\n        label: \"WPM Gross\",\n        data: props.items.map((item: any) => item.wpmGross),\n        backgroundColor: \"rgb(75, 192, 192)\",\n        borderColor: \"rgb(75, 192, 192)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <div className=\"bg-white p-3 rounded\">\n        <Bar type=\"bar\" data={data} options={options} />\n      </div>\n    </>\n  );\n};\n\nexport default GameChart;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport moment from \"moment\";\n\nfunction GameStatsTable(props: any) {\n  return (\n    <>\n     <div className=\"table-responsive\">\n        <Table striped bordered hover className=\"table\">\n        <thead>\n          <tr>\n            <th >#</th>\n            <th >Accuracy</th>\n            <th style={{minWidth: \"100px\"}}>WPM Net</th>\n            <th style={{minWidth: \"150px\"}}>WPM Gross</th>\n            <th style={{minWidth: \"100px\"}}>Total</th>\n            <th style={{minWidth: \"100px\"}}>Seconds</th>\n            <th style={{minWidth: \"200px\"}}>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.items.map((item: any, index: number) => (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{item.accuracy}%</td>\n              <td>{item.wpmNet} wpm</td>\n              <td>{item.wpmGross} wpm</td>\n              <td>{item.total} words</td>\n              <td>{item.seconds}s</td>\n              <td>{moment(item.startTime).fromNow()}s</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n     </div>\n    </>\n  );\n}\n\nexport default GameStatsTable;\n","import { Line } from \"react-chartjs-2\";\nimport moment from \"moment\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst GameLineChart = (props: any) => {\n  const data = {\n    labels: props.items.map((item: any) => moment(item.startTime).fromNow()),\n    datasets: [\n      {\n        label: \"Accuracy\",\n        data: props.items.map((item: any) => item.accuracy),\n        backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 2,\n      },\n      {\n        label: \"WPM Net\",\n        data: props.items.map((item: any) => item.wpmNet),\n        backgroundColor: \"rgb(54, 162, 235)\",\n        borderColor: \"rgb(54, 162, 235)\",\n        borderWidth: 2,\n      },\n      {\n        label: \"WPM Gross\",\n        data: props.items.map((item: any) => item.wpmGross),\n        backgroundColor: \"rgb(75, 192, 192)\",\n        borderColor: \"rgb(75, 192, 192)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <div className=\"bg-white p-3 rounded\">\n        <Line type=\"line\" data={data} options={options} />\n      </div>\n    </>\n  );\n};\n\nexport default GameLineChart;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header/Header\";\nimport { Container, Form } from \"react-bootstrap\";\nimport Sidenav from \"../components/Sidenav/Sidenav\";\nimport GameChart from \"../components/Stats/BarChart\";\nimport GameStatsTable from \"../components/Stats/Table\";\nimport GameLineChart from \"../components/Stats/LineChart\";\n\nconst StyledContent = styled.div`\n  margin-left: 150px;\n\n  .table {\n    background-color: white;\n  }\n\n  @media (max-width: 768px) {\n    margin-left: 0;\n  }\n`;\n\nfunction GameStats() {\n  const [items, setItems] = useState<any>([]);\n  const [type, setType] = useState(1);\n  const [nRecords, seNRecords] = useState(10);\n\n  useEffect(() => {\n    let records: any = localStorage.getItem(\"records\");\n    records = records ? JSON.parse(records) : [];\n    setItems(\n      records\n        .reverse()\n        .filter((item: any) => item.seconds > 30)\n        .slice(0, nRecords)\n    );\n  }, [nRecords]);\n\n  const getGameStatByType = (type: number, items: any) => {\n    if (type === 1) {\n      return <GameStatsTable items={items} />;\n    } else if (type === 2) {\n      return <GameChart items={items} />;\n    } else {\n      return <GameLineChart items={items} />;\n    }\n  };\n\n  return (\n    <>\n      <Sidenav />\n\n      <StyledContent>\n        <Header />\n\n        <Container style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}>\n          <Form className=\"p-3 pb-2 rounded mb-3 bg-white\">\n            <div className=\"row\">\n              <div className=\"col-6 col-md-3 \">\n                <Form.Group className=\"mb-0\" controlId=\"formBasicEmail\">\n                  <Form.Control\n                    as=\"select\"\n                    name=\"select-stat-type\"\n                    onChange={(event) => setType(+event.target.value)}\n                  >\n                    <option value=\"1\">Table</option>\n                    <option value=\"2\">Bar Graph</option>\n                    <option value=\"3\">Line Graph</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n\n              <div className=\"col-6 col-md-3 \">\n                <Form.Group className=\"mb-0\" controlId=\"formBasicEmail\">\n                  <Form.Control\n                    as=\"select\"\n                    name=\"select-stat-type\"\n                    onChange={(event) => seNRecords(+event.target.value)}\n                  >\n                    <option value=\"10\">10 Records</option>\n                    <option value=\"20\">20 Records</option>\n                    <option value=\"30\">30 Records</option>\n                    <option value=\"50\">50 Records</option>\n                    <option value=\"100\">100 Records</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </div>\n          </Form>\n\n          {getGameStatByType(type, items)}\n        </Container>\n      </StyledContent>\n    </>\n  );\n}\n\nexport default GameStats;\n","interface ChaptersTypeI {\n  id: number;\n  title: string;\n  description: string;\n}\n\nconst createChapter = (id: number, title: string, description: string) => {\n  return {\n    id,\n    title,\n    description,\n  };\n};\n\nconst texts = [\n  \"Scolding is something common in student life. Being a naughty boy, I am always scolded by my parents. But one day I was severely scolded by my English teacher. She infect teaches well. But that day, I could not resist the temptation that an adventure of Nancy Drew offered. While she was teaching, I was completely engrossed in reading that book. Nancy Drew was caught in the trap laid by some smugglers and it was then when I felt a light tap on my bent head. The teacher had caught me red handed. She scolded me then and there and insulted me in front of the whole class. I was embarrassed. My cheeks burned being guilty conscious. When the class was over, I went to the teacher to apologize. When she saw that I had realized my mistake, she cooled down and then told me in a very kind manner how disheartening it was when she found any student not paying attention. I was genuinely sorry and promised to myself never to commit such a mistake again.\",\n\n  \"Days are not of equal value in one’s life. Some bring happiness while others bring sadness. Sadness and happiness both are equally important to man’s life, since they are the two sides of a coin. As we cannot forget the happiest day, we are unable to forget the saddest day of our life too. The saddest day of my life was the Diwali Day. Diwali is considered to be a happy festival and till last Diwali, it was my favorite festival. On last Diwali, my sister, my brother and I were busy lighting the fireworks. I was holding a ‘fuljhari’ in my hand and unfortunately my younger brother, who was standing just beside me, had a cracker in his hand. This cracker caught fire and a very loud explosion was heard which shook my sister and me. After that, we all could think of nothing else than blood stained cotton, bandage, dettol etc. My cousin took my brother to the doctor where he got 14 stitches in his forefinger and thumb. But at home, everybody kept cursing and blaming me for the mishap. That night, I could not sleep and I cried a lot. For next few days, I bore the burden of this blame for being responsible for this unfortunate incident. I felt deeply guilty conscious which I was able to overcome after a long time.\",\n\n  \"Studying is the main source of knowledge. Books are indeed never failing friends of man. For a mature mind, reading is the greatest source of pleasure and solace to distressed minds. The study of good books ennobles us and broadens our outlook. Therefore, the habit of reading should be cultivated. A student should never confine himself to his schoolbooks only. He should not miss the pleasure locked in the classics, poetry, drama, history, philosophy etc. We can derive benefit from other’s experiences with the help of books. The various sufferings, endurance and joy described in books enable us to have a closer look at human life. They also inspire us to face the hardships of life courageously. Nowadays there are innumerable books and time is scarce. So we should read only the best and the greatest among them. With the help of books we shall be able to make our thinking mature and our life more meaningful and worthwhile.\",\n\n  \"Recently, an exhibition ‘Building A New India’ was held in the capital. It was organized by the Ministry of Information and Broadcasting, Government of India. The exhibition was set up in the Triveni Kala Sangam. The chief exhibits were photographs, novels, some sculptures by Indian modern artists presenting Indian cultural inheritance. First of all, I visited the general section of the exhibition where different charts and photographs depicting India’s development in various fields were set. Most impressive photographs among these were those showing India’s nuclear development. The second section dealt with India’s magnificent historical background. I was fascinated by the pictures of Mohanjodaro excavation. Then I saw the most beautiful and colorful section of the exhibition i.e. the cultural section. It consisted of paintings, sculptures, photographs etc. The Rajasthani and Gujarati paintings were very colourful and attractive. This exhibition, inaugurated by the Prime Minister, lasted for a week. It proved to be of great educational value. It brushed up my knowledge about India as my motherland. It enhanced my respect for my great country, India. I would very much appreciate if the Indian government organized some more such exhibitions.\",\n\n  \"A teacher is called builder of the nation. The profession of teaching needs men and women with qualities of head and heart. There are many teachers in our school and a large number of teachers among them are highly qualified. I have great respect for all of them. Yet I have a special liking for Miss Y. Miss Y is a woman of great principles. She is jewel among all the teachers. Almost all the students respect her. She teaches us English. She is quite at home in this subject. She takes keen interest in teaching students. Simple living and high thinking is her motto. She is a woman of sweet temper and is always ready to help in difficulties. She treats us like her own brothers and sisters. She is an ideal teacher. It is these qualities of head and heart that have endeared Miss Y to the students and teachers alike. She is an ideal teacher in real sense of the word. She is the real model to emulate. May she live as long as there is sweet fragrance in the flowers?\",\n];\n\nconst chapters: ChaptersTypeI[] = [\n  createChapter(1, \"When My Teacher Scolded Me\", texts[0]),\n  createChapter(2, \"The Saddest Day of My Life\", texts[1]),\n  createChapter(3, \"The Habit of Reading\", texts[2]),\n  createChapter(4, \"A Visit to an Exhibition\", texts[3]),\n  createChapter(5, \"My Favorite Teacher\", texts[4]),\n];\n\nconsole.log({ chapters });\n\nexport { chapters };\n","import { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { chapters as chaptersDb } from \"../../db/chapters\";\n\nfunction ApplySettings(props: any) {\n  const [chapters] = useState(chaptersDb);\n  const [chapter, setChapter] = useState(chapters[0]);\n\n  useEffect(() => {\n    props.setParas(chapter.description);\n  }, [chapter, props]);\n\n  return (\n    <Form className=\"p-3 mt-3 bg-white rounded\" style={{ fontSize: \"1rem\" }}>\n      <Form.Group controlId=\"exampleForm.ControlSelect2\">\n        <Form.Label>Duration</Form.Label>\n        <Form.Control\n          as=\"select\"\n          onChange={(event: any) => props.setDuration(+event.target.value)}\n          defaultValue={props.duration}\n        >\n          <option value=\"3\">3 sec</option>\n          <option value=\"5\">5 sec</option>\n          <option value=\"15\">15 sec</option>\n          <option value=\"30\">30 sec</option>\n          <option value=\"60\">1 min</option>\n          <option value=\"180\">3 min</option>\n          <option value=\"300\">5 min</option>\n          <option value=\"600\">10 min</option>\n          <option value=\"900\">15 min</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group controlId=\"exampleForm.ControlSelect2\">\n        <Form.Label>Select Paragraph Title</Form.Label>\n        <Form.Control\n          as=\"select\"\n          onChange={(event: any) =>\n            setChapter(\n              chapters.find((chapter) => chapter.id === +event.target.value) ||\n                chapters[0]\n            )\n          }\n          defaultValue={1}\n        >\n          {chapters &&\n            chapters.length > 0 &&\n            chapters.map((chapter, index) => (\n              <option value={chapter.id}>{chapter.title}</option>\n            ))}\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Custom Paragraph</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={6}\n          value={chapter.description}\n          onChange={(event: any) => props.setParas(event.target.value)}\n          style={{ fontSize: \"1.1rem\" }}\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" onClick={() => props.setOpen(false)}>\n        Apply Settings\n      </Button>\n    </Form>\n  );\n}\nexport default ApplySettings;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Sidenav from \"../components/Sidenav/Sidenav\";\nimport Header from \"../components/Header/Header\";\nimport { Container } from \"react-bootstrap\";\nimport Typer from \"../components/Typing/Typer\";\nimport ApplySettings from \"../components/Setting/ApplySettings\";\n\nconst StyledContent = styled.div`\n  margin-left: 150px;\n\n  @media (max-width: 768px) {\n    margin-left: 0;\n  }\n`;\n\nfunction CustomTyping() {\n  const [open, setOpen] = useState(true);\n  const [duration, setDuration] = useState(60);\n  const [paras, setParas] = useState(\n    \"The quick brown fox jumps over the lazy dog\"\n  );\n\n  const handleSetting = () => {\n    setOpen((open) => !open);\n  };\n\n  console.log({ duration, paras });\n\n  return (\n    <>\n      <Sidenav />\n\n      <StyledContent>\n        <Header />\n\n        <Container style={{ paddingTop: \"30px\", paddingBottom: \"20px\" }}>\n          <Typer\n            text={paras.replace(/(\\r\\n|\\r|\\n){2,}/g, \"$1\\n\")}\n            settings={{ time: `${duration / 15}`, mode: \"0\" }}\n            handleSetting={handleSetting}\n          />\n\n          {open && (\n            <ApplySettings\n              setOpen={setOpen}\n              duration={duration}\n              setDuration={setDuration}\n              paras={paras}\n              setParas={setParas}\n            />\n          )}\n        </Container>\n      </StyledContent>\n    </>\n  );\n}\n\nexport default CustomTyping;\n","import styled from \"styled-components\";\nimport { Route, Switch } from \"react-router\";\nimport StartTyping from \"./pages/StartTyping\";\nimport GameStats from \"./pages/GameStats\";\nimport GeneralSetting from \"./pages/GeneralSetting\";\nimport CustomTyping from \"./pages/CustomTyping\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <StyledApp>\n      <Switch>\n        <Route exact path=\"/\" component={StartTyping} />\n        <Route exact path=\"/start-typing\" component={StartTyping} />\n        <Route exact path=\"/custom-typing\" component={CustomTyping} />\n        <Route exact path=\"/game-stats\" component={GameStats} />\n        <Route exact path=\"/settings\" component={GeneralSetting} />\n      </Switch>\n    </StyledApp>\n  );\n}\n\nconst StyledApp = styled.div`\n  min-height: 100vh;\n  background: rgba(52, 58, 64, 0.94);\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"typing-test\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}